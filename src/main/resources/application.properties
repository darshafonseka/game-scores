# datasource connection properties
spring.datasource.url=jdbc:mysql://${IPAY_TXN_DB_HOST:localhost}:3307/game_scores?useSSL=false
spring.datasource.username=${IPAY_DB_USER:root}
spring.datasource.password=${IPAY_DB_PASSWORD:}


spring.datasource.driverClassName=com.mysql.jdbc.Driver

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect

logging.level.org.hibernate.SQL=INFO

## Producer properties
#spring.kafka.producer.bootstrap-servers=pkc-ldvr1.asia-southeast1.gcp.confluent.cloud:9092

spring.kafka.bootstrap-servers=pkc-ldvr1.asia-southeast1.gcp.confluent.cloud:9092
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username='Y37WYEIV5LXRSP5S' password='Nt4pQryel2hLmADIB1K+rBDHlW5O9cCD4aXh6sMyupIjsJwCK1HKSIuaH+l5eJtV';
spring.kafka.properties.sasl.mechanism=PLAIN
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.producer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.use-type-headers=false






